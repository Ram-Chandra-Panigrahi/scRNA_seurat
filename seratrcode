R script utilizing Seurat package to generate t-SNE plots for the single-cell data.
library(devtools)
library(Seurat)
library(dplyr)
library(Matrix)
csf.data=read.table('<tpm.csv>',header=T,row.names=1,sep='\t')
csf.data=log(csf.data+1)
celltypes=unlist(lapply(colnames(csf.data), ExtractField, 1))
table(celltypes)
csf <- CreateSeuratObject(raw.data = csf.data, min.cells = 3, min.genes = 200, project = 'CSF_2018')
sc_cell_info <- read.table('sc_cell_info.txt', header = T,row.names=1)
csf <- AddMetaData(object = csf, metadata = sc_cell_info, col.name = c('Twin', 'Case', 'Sample',
'index.sort', 'Clones'))
Sys.setlocale('LC_ALL','C')
mito.genes <- grep(pattern = "^MT-", x = rownames(x = csf@data), value = TRUE)
percent.mito <- Matrix::colSums(csf@raw.data[mito.genes, ])/Matrix::colSums(csf@raw.data)
csf <- AddMetaData(object = csf, metadata = percent.mito, col.name = 'percent.mito')
VlnPlot(object = csf, features.plot = c('nGene', 'percent.mito'), nCol = 2, x.lab.rot = TRUE)
csf <- FilterCells(object = csf, subset.names = c('nGene', 'percent.mito'), low.thresholds = c(200, -Inf),
high.thresholds = c(6000, 0.05))
csf <- NormalizeData(object = csf, normalization.method = 'LogNormalize', scale.factor = 10000)
csf <- FindVariableGenes(object = csf, mean.function = ExpMean, dispersion.function = LogVMR,
x.low.cutoff = 0.0125, x.high.cutoff = 3, y.cutoff = 0.5)
length(x = csf@var.genes)
csf <- ScaleData(object = csf, vars.to.regress = 'percent.mito')
csf <- RunPCA(object = csf, pc.genes = csf@var.genes, do.print = TRUE, pcs.print = 1:5, genes.print = 5)
VizPCA(object = csf, pcs.use = 1:2)
PCAPlot(object = csf, dim.1 = 1, dim.2 = 2)
csf <- ProjectPCA(object = csf, do.print = FALSE)
PCHeatmap(object = csf, pc.use = 1, cells.use = 500, do.balanced = TRUE, label.columns = FALSE)
PCHeatmap(object = csf, pc.use = 1:20, cells.use = 500, do.balanced = TRUE, label.columns = FALSE,
use.full = FALSE)
PrintPCA(object = csf, pcs.print = 1:20, genes.print = 5, use.full = FALSE)
csf <- JackStraw(object = csf, num.replicate = 100)
JackStrawPlot(object = csf, PCs = 1:20)
PCElbowPlot(object = csf)
csf <- FindClusters(object = csf, reduction.type = 'pca', dims.use = 1:10, resolution = 0.6, print.output = 0,
save.SNN = TRUE)
PrintFindClustersParams(object = csf)
csf <- RunTSNE(object = csf, dims.use = 1:10, do.fast = TRUE, check_duplicates = FALSE)
TSNEPlot(object = csf, do.label=T)
VlnPlot(object = csf, features.plot = c('nGene', 'percent.mito'), nCol = 2,
x.lab.rot = TRUE)
new.subset <- SubsetData(object = csf, ident.remove = "3")
csf_v1 <- csf
save(csf_v1, file = "./csf_v1_2018.Rda")
csf <- new.subset
csf <- FilterCells(object = csf, subset.names = c('nGene', 'percent.mito'), low.thresholds = c(200, -Inf),
high.thresholds = c(6000, 0.025))
csf <- FindVariableGenes(object = csf, mean.function = ExpMean,
dispersion.function = LogVMR, x.low.cutoff = 0.0125, x.high.cutoff = 3, y.cutoff = 0.5)
length(x = csf@var.genes)
csf <- ScaleData(object = csf, vars.to.regress = 'percent.mito')
csf <- RunPCA(object = csf, pc.genes = csf@var.genes, do.print = TRUE, pcs.print = 1:5, genes.print = 5)
VizPCA(object = csf, pcs.use = 1:2)
PCAPlot(object = csf, dim.1 = 1, dim.2 = 2)
csf <- ProjectPCA(object = csf, do.print = FALSE)
PCHeatmap(object = csf, pc.use = 1, cells.use = 500, do.balanced = TRUE, label.columns = FALSE)
PCHeatmap(object = csf, pc.use = 1:20, cells.use = 500, do.balanced = TRUE,label.columns = FALSE,
use.full = FALSE)
PrintPCA(object = csf, pcs.print = 1:20, genes.print = 5, use.full = FALSE)
csf <- JackStraw(object = csf, num.replicate = 100)
JackStrawPlot(object = csf, PCs = 1:20)
PCElbowPlot(object = csf)
csf <- FindClusters(object = csf, reduction.type = 'pca', dims.use = 1:11,
resolution = 0.6, print.output = 0, save.SNN = TRUE, force.recalc = TRUE)
PrintFindClustersParams(object = csf)
csf <- RunTSNE(object = csf, dims.use = 1:11, do.fast = TRUE, check_duplicates = FALSE)
TSNEPlot(object = csf, do.label=T)
VlnPlot(object = csf, features.plot = c('nGene', 'percent.mito'), nCol = 2, x.lab.rot = TRUE)
new.subset <- SubsetData(object = csf, ident.remove = "6")
csf_v2 <- csf
csf_v2
save(csf_v2, file = "./csf_v2_2018.Rda")
csf <- new.subset
csf <- FindVariableGenes(object = csf, mean.function = ExpMean,
dispersion.function = LogVMR, x.low.cutoff = 0.0125, x.high.cutoff = 3, y.cutoff = 0.5)
length(x = csf@var.genes)
csf <- ScaleData(object = csf, vars.to.regress = 'percent.mito')
csf <- RunPCA(object = csf, pc.genes = csf@var.genes, do.print = TRUE, pcs.print = 1:5, genes.print = 5)
VizPCA(object = csf, pcs.use = 1:2)
PCAPlot(object = csf, dim.1 = 1, dim.2 = 2)
csf <- ProjectPCA(object = csf, do.print = FALSE)
PCHeatmap(object = csf, pc.use = 1, cells.use = 500, do.balanced = TRUE, label.columns = FALSE)
PCHeatmap(object = csf, pc.use = 1:20, cells.use = 500, do.balanced = TRUE, label.columns = FALSE,
use.full = FALSE)
PrintPCA(object = csf, pcs.print = 1:20, genes.print = 5, use.full = FALSE)
csf <- JackStraw(object = csf, num.replicate = 100)
JackStrawPlot(object = csf, PCs = 1:20)
PCElbowPlot(object = csf)
csf <- FindClusters(object = csf, reduction.type = 'pca', dims.use = 1:11, resolution = 0.6, print.output = 0,
save.SNN = TRUE, force.recalc = TRUE)
PrintFindClustersParams(object = csf)
csf <- RunTSNE(object = csf, dims.use = 1:11, do.fast = TRUE, check_duplicates = FALSE)
TSNEPlot(object = csf, do.label=T)
csf.markers <- FindAllMarkers(object = csf, only.pos = TRUE, min.pct = 0.25, thresh.use = 0.25)
csf.markers %>% group_by(cluster) %>% top_n(2, avg_logFC)
write.table(csf.markers %>% group_by(cluster) %>% top_n(10, avg_logFC), 'csf.markers.tsv', sep='\t')
top10 <- csf.markers %>% group_by(cluster) %>% top_n(10, avg_logFC)
DoHeatmap(object = csf, genes.use = top10$gene, slim.col.label = TRUE, remove.key = TRUE)
TSNEPlot(object = csf, do.return = TRUE, group.by = 'index.sort', do.label = TRUE)
TSNEPlot(object = csf, do.return = TRUE, group.by = 'Clones', do.label = TRUE)
VlnPlot(object = csf, features.plot = c('nGene', 'percent.mito'), nCol = 2, x.lab.rot = TRUE)
write.table(csf@meta.data, 'meta.data.tsv', sep='\t')
save(csf, file = "./csf_2018.Rda")
